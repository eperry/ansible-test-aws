- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    aws_ssh_key_path: "/home/XXXXXX/.ssh/"
    aws_ssh_key_private: "id_rsa"
    vpc_network: "10.250.250.0/24"
    vpc_subnet:  "10.250.250.0/24"

  environment: 
    AWS_ACCESS_KEY_ID: "#####IAM ACCESS ID######"
    AWS_SECRET_ACCESS_KEY: "#######################"
    AWS_DEFAULT_REGION: "us-east-1"

  tasks:
  - name: Getting Centos AMI ID
    ec2_ami_facts:
      owners: "679593333241"
      filters:
        product-code: aw0evgkw8e5c1q413zgy5pjce
        architecture: "x86_64"
        name: "CentOS Linux 7 x86_64 HVM EBS ENA*"
    register: ami_id

  - debug: 
      var: ami_id

  - name: Make Sure Keypair exists
    ec2_key:
      name: demo_key
      key_material: "{{ lookup('file', '{{ aws_ssh_key_path }}/{{ aws_ssh_key_private }}.pub') }}"
      force: false
    register: key_pair

  - debug:
      var: key_pair

  - name: create VPC
    ec2_vpc_net:
      name: "{{ vpc_network }}"
      cidr_block: "{{ vpc_network }}"
      state: present
    register: vpc
  
  - debug:
      var: vpc

  - name: associate subnet to the VPC
    ec2_vpc_subnet:
     state: present
     vpc_id: "{{ vpc.vpc.id }}"
     cidr: "{{ vpc_subnet }}"
     map_public: true
    register: subnet

  - debug:
      var: subnet 

  - name: create IGW
    ec2_vpc_igw:
     vpc_id: "{{ vpc.vpc.id }}"
     state: "present"
    register: igw

  - debug:
      var: igw
  - name: Route IGW
    ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ subnet.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id  }}"

  - name: "Create VPC Security Group"
    ec2_group:
      name: "all"
      vpc_id: "{{ vpc.vpc.id }}"
      description: "Default access"
      rules:
      - proto: tcp
        ports:
        - 22
        - 80
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 22,80
    register: security_group

  - debug:
      var: security_group

  - name: "Provision an instances"
    ec2:
      id: demo3
      instance_type: t2.micro
      vpc_subnet_id: "{{ subnet.subnet.id }}"
      image: "{{ ami_id.images[0].image_id }}"
      volumes:
              #- device_name: /dev/xvda
      - device_name: /dev/sda1
        volume_size: 120
        delete_on_termination: true
      key_name: "{{ key_pair.key.name }}"
      group:
      - "{{ security_group.group_name }}"
      instance_tags:
        name: 'demo3'
        role: "dns"
      wait: yes
      count: 1
      state: present
    register: ec2

  - debug:
      var: ec2


